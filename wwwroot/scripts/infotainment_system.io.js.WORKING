var CONTROL_SERVER_URL = 'http://128.255.250.145:80';
var CLIENT_URL_VARS;

var MP3_ALBUM_LIST = {};

var sessionVars = {
	'OSD_source_info'			: [],
	'OSD_map_img_info'			: [],
	'VDS_CG_Chassis_Position'	: [],
	'VDS_CG_Chassis_Orient'		: [],
	'MAIN_MAP_IMG'				: '',
	'MAIN_ROUTE_IMG'			: '',
	'LRI_topLeft_X'				: '',
	'LRI_topLeft_Y'				: '',
	'LRI_bottomRight_X'			: '',
	'LRI_bottomRight_Y'			: '',
	'local_zoom'				: 1
};
var dotMarkerOffset_X = -30;
var dotMarkerOffset_Y = -30;

var compassHeadings = {
	0	: { L:'W', C:'N', R:'E' },
	1	: { L:'N', C:'E', R:'S' },
	2	: { L:'E', C:'S', R:'W' },
	3	: { L:'S', C:'W', R:'N' }
};

function diff(a,b) {
	return Math.abs(a-b);
}

function ObjectLength( object ) {
    var length = 0;
    for( var key in object ) {
        if( object.hasOwnProperty(key) ) {
            ++length;
        }
    }
    return length;
}

function readURLvars() {
	var query_string = {};
	var query = window.location.search.substring(1);
	var vars = query.split("&");
	for (var i=0;i<vars.length;i++) {
		var pair = vars[i].split("=");
			// If first entry with this name
		if (typeof query_string[pair[0]] === "undefined") {
			query_string[pair[0]] = decodeURIComponent(pair[1]);
			// If second entry with this name
		} else if (typeof query_string[pair[0]] === "string") {
			var arr = [ query_string[pair[0]],decodeURIComponent(pair[1]) ];
			query_string[pair[0]] = arr;
			  // If third or later entry with this name
		} else {
			query_string[pair[0]].push(decodeURIComponent(pair[1]));
		}
	} 
	CLIENT_URL_VARS = query_string;
	scanURLvars();
}

function scanURLvars() {
	/*
	if (CLIENT_URL_VARS.ch) {
		if(CLIENT_URL_VARS.ch.length > 0) {
			THIS_CLIENT_HOST = CLIENT_URL_VARS.host;
			THIS_CLIENT_CH = CLIENT_URL_VARS.ch;
			document.title = 'NMC-'+CLIENT_URL_VARS.ch;
			$('#debug-host').html(THIS_CLIENT_HOST);
			$('#debug-channel').html(THIS_CLIENT_CH);
			connect();
		} else {
			//connect();
		}
	} else {
		//connect();
	}
	*/
	connect();
}
	
function twoDigits(d) {
	if(0 <= d && d < 10) return "0" + d.toString();
	if(-10 < d && d < 0) return "-0" + (-1*d).toString();
	return d.toString();
}

Date.prototype.toOSDformat = function() {
	return twoDigits(1 + this.getMonth()) + "/" + twoDigits(this.getDate()) + "/" + this.getFullYear() + "&nbsp;&nbsp;" + this.toLocaleTimeString();
};

Date.prototype.toEntuneformat = function() {
	var HHMM = this.toLocaleTimeString().split(':');
	return HHMM[0]+':'+HHMM[1];
};

var min_w = 300; // minimum video width allowed
var vid_w_orig;  // original video dimensions
var vid_h_orig;

var globalTimer = setInterval(updateOSD, (1000/30));

function updateOSD() {
	//var updatedDate = new Date().toEntuneformat();
	var updatedDate = moment().format('h:mm');
	$('.entune_clock').html(updatedDate);
}


var socket = null,
	clientId = null,
	nickname = null,
	serverAddress = CONTROL_SERVER_URL; 
	
var smartClick = ('ontouchstart' in document.documentElement)  ? 'touchstart' : 'mousedown';

function arrayObjectIndexOf(myArray, searchTerm, property) {
    for(var i = 0, len = myArray.length; i < len; i++) {
        if (myArray[i][property] === searchTerm) return i;
    }
    return -1;
}

function bindDOMEvents() {
	$('.button_BACK_LINK').on('mousedown touchstart',function() {
		$(this).addClass('buttonDOWN');
	});
	$('.button_BACK_LINK').on('mouseup',function() {
		$(this).removeClass('buttonDOWN');
		$('#MSTR_LINK_BACK').click();
	});
	
	$('.button_LINK').on('mousedown touchstart',function() {
		$(this).addClass('buttonDOWN');
	});
	
	$('.button_LINK').on('mouseup',function() {
		var anchorLink = $(this).data('anchorlink');
		$('#MSTR_LINK').attr('href',anchorLink);
		switch(anchorLink) {
			case '#pageContainer_MP3': {
				socket.emit('mp3_jukebox_enumerate',{});
				break;
			}
		}
		$(this).removeClass('buttonDOWN');
		$('#MSTR_LINK').click();
	});
	
	$(document.body).on('mouseup', '.just_LINK', function() {
		var anchorLink = $(this).data('anchorlink');
		$('#MSTR_LINK').attr('href',anchorLink);
		$('#MSTR_LINK').click();
	});
	
	$(document.body).on(smartClick, '.mp3_album_LINK', function() {
		$('#MP3_playlist_container').html('');
		var thisAlbumTitle = $(this).data('albumtitle');
		//console.log(MP3_ALBUM_LIST[thisAlbumTitle].mp3List);
		$.each(MP3_ALBUM_LIST[thisAlbumTitle].mp3List, function(index, value) {
			//console.log(index+' '+value);
			var thisDiv =
				'<div class="entune_list_row button_PLAYFILE" style="width:374px; white-space:nowrap; text-overflow:ellipsis; overflow:hidden;" data-playlink="'+value.url+'" data-albumtitle="'+thisAlbumTitle+'" data-trackname="'+value.filename+'">'+
				value.filename.substr(0,value.filename.length-4)+
				'</div>';
			$('#MP3_playlist_container').append(thisDiv).trigger('create');
		}); 
		var timelineHTML =
			'<div style="display: -webkit-flex; display: flex;">'+
				'<div style="flex:1;" class="CURRENTLY_PLAYING_TIME">0:00</div>'+
				'<div style="flex:5;" class="CURRENTLY_PLAYING_METER_outer">'+
					'<div class="CURRENTLY_PLAYING_METER_inner"></div>'+
				'</div>'+
				'<div style="flex:1;" class="CURRENTLY_PLAYING_DURATION">2:00</div>'+
			'</div>';
		$('#MP3_playlist_album_cover_container').html('<img src="'+MP3_ALBUM_LIST[thisAlbumTitle].folderArtURL+'" style="height:250px; margin-left:46px;">'+timelineHTML);
		$('#MP3_playlist_page_title').html(thisAlbumTitle);
	}); 
	
	$(document.body).on('click', '.button_PLAYFILE', function() {
		$(this).addClass('buttonDOWN');
		var playfileTimeout = setTimeout(function() {
			$('.entune_list_row').removeClass('buttonDOWN');
		}, 100);
		//alert(playlink);
	});
	
	$(document.body).on('mouseup', '.button_PLAYFILE', function() {
		var playlink = $(this).data('playlink');
		var thisAlbumTitle = $(this).data('albumtitle');
		var thisTrackName = $(this).data('trackname');
		socket.emit('IUI_command',{ type: 'playMP3', 'playlink':playlink, albumtitle: thisAlbumTitle, trackname: thisTrackName });
	});
	
	// PLAY / PAUSE
	$(document.body).on(smartClick, '.BUTTON_mp3_playPause_toggle', function() {
		var thisButtonType = $(this).data('showing');
		switch(thisButtonType) {
			case 'play':
				socket.emit('IUI_command',{ type: 'audio_pause' });
				break;
			case 'pause':
				socket.emit('IUI_command',{ type: 'audio_play' });
				break;
		}
	});
	
	// FWD / BACK
	$(document.body).on(smartClick, '.BUTTON_mp3_fwd, .BUTTON_mp3_back', function() {
		var thisButtonType = $(this).data('type');
		switch(thisButtonType) {
			case 'back':
				socket.emit('IUI_command',{ type: 'audio_back' });
				break;
			case 'fwd':
				socket.emit('IUI_command',{ type: 'audio_fwd' });
				break;
		}
	});
	
	// VOLUME
	$(document.body).on('mouseup', '.BUTTON_VOLUME_modal_toggle', function() {
		//console.log('ding');
		$('#panelContainer_VOLUME').popup('open');
		//$('#MSTR_LINK_MODAL').click();
	});
	
	$(document.body).on('mousedown touchstart', '.buttonVolume', function() {
		$(this).addClass('buttonDOWN');
	});
	
	$(document.body).on('mouseup', '#VOLUME_level_UP', function() {
		socket.emit('IUI_command',{ type: 'audio_volume_up' });
		$('.buttonVolume').removeClass('buttonDOWN');
	});
	
	$(document.body).on('mouseup', '#VOLUME_level_DOWN', function() {
		socket.emit('IUI_command',{ type: 'audio_volume_down' });
		$('.buttonVolume').removeClass('buttonDOWN');
	});
	
	$(document.body).on('mousedown touchstart', '.PLAY_CONTROLS', function() {
		$(this).addClass('buttonDOWN');
	});
	
	$(document.body).on('mouseup', '.PLAY_CONTROLS', function() {
		$('.PLAY_CONTROLS').removeClass('buttonDOWN');
	});
	
	
	// Virtual keyboard
	$('.button_KB').on(smartClick,function() {
		$(this).addClass('buttonDOWN');
		var currentDisplay = $('#task_a_display').html();
		var thisKeyValue = $(this).html();
		if (!$(this).data('specialkey')) {
			$('#task_a_display').html(currentDisplay+thisKeyValue);
		} else {
			var thisSpecialKeyValue = $(this).data('specialkey');
			switch(thisSpecialKeyValue) {
				case 'backspace':
					var currentDisplayLength = currentDisplay.length;
					$('#task_a_display').html(currentDisplay.substring(0,currentDisplayLength-1));
					break;
				case 'space':
					$('#task_a_display').html(currentDisplay+' ');
					break;
				case 'enter':
					$('#task_a_display').html('');
					break;
			} // end thisSpecialKey switch
		}
	});
	
	$('.button_KB').on('mouseup', function() {
		$('.button_KB').removeClass('buttonDOWN');
	});
}
	
function bindSocketEvents(){
	socket.on('connect', function(){
		socket.emit('node_announce', { client:"cab_infotainment_ui", type: "cab_infotainment_ui" });
		//changeVideoSource({vidgroup: 'clouds'});
	});
	
	socket.on('connect_error', function(){
		$('#debug_connectionStatus').html('Connection issues');
	});
	
	socket.on('disconnect', function(){
		$('#debug_connectionStatus').html('Disconnected from host');
	});
	
	socket.on('ready', function(data){
		$('#debug_connectionStatus').html('Connected');
		//alert('ready');
	});
	
	socket.on('updateInfotainmentUI', function(data) {
		MP3_ALBUM_LIST = data;
		
		$('#MP3_album_list_container').html('');
		var MP3_LIST_COVER_HTML = '';
		var gridIndex = 'a';
		$.each(data, function(index, value) {
			//console.log(value);
			var thisDiv =
				'<div class="ui-block-'+gridIndex+' just_LINK mp3_album_LINK" data-anchorlink="#pageContainer_MP3_play" data-albumtitle="'+index+'" title="'+index+'">'+
					'<img class="album_cover" src="'+value.folderArtURL+'">'+
				'</div>';
			//MP3_LIST_COVER_HTML += thisDiv;
			
			$('#MP3_album_list_container').append(thisDiv).trigger('create');
				
			switch(gridIndex){ //change class of ui-block
				case 'a' : gridIndex= 'b'; break;
				case 'b' : gridIndex= 'c'; break;
				case 'c' : gridIndex= 'd'; break;
				case 'd' : gridIndex= 'a'; break;
			}
		}); 
		//console.log(data);
	});

	socket.on('PLAY_CURRENT', function(data) {
		//console.log(data);
		var thisFolderArtURL = '';
		var thisFolderArtURLmods = '';
		$('#AUDIO_playlist_container .AUDIO_playlist_group').hide();
		
		var tempTitleBreak = data.nowplaying_title.substr(0,2);
		if (tempTitleBreak === 'FM') {
			$('#AUDIO_playlist_container .AUDIO_playlist_radio').show();
		} else {
			thisFolderArtURL = MP3_ALBUM_LIST[data.nowplaying_title].folderArtURL;
			$('#AUDIO_playlist_container .AUDIO_playlist_MP3').show();
		}
		$('.CURRENTLY_PLAYING_TIME').html(moment.duration(data.currenttime, 'seconds').format("m:ss",{ trim: false }));
		$('.CURRENTLY_PLAYING_DURATION').html(moment.duration(data.duration, 'seconds').format("m:ss",{ trim: false }));
		$('.CURRENTLY_PLAYING_METER_inner').css('width',((data.currenttime/data.duration)*100)+'%');
		
		if ($('#MP3_playlist_album_cover_container').find('img:first').attr('src') !== thisFolderArtURL) {
			$('#MP3_playlist_album_cover_container').find('img:first').attr('src', thisFolderArtURL);
		}
		if ($('#AUDIO_playlist_container').find('img:first').attr('src') !== thisFolderArtURL) {
			$('#AUDIO_playlist_container').find('img:first').attr('src', thisFolderArtURL);
		}
		
		$('.AUDIO_title').html(data.nowplaying_title.split(' - ')[0]);
		$('.AUDIO_subtitle').html(data.nowplaying_subtitle);
		
		
	
		
		
		if (!$('#AUDIO_playlist_controls_MAIN').length) {		

			$('#AUDIO_playlist_container').parent().removeClass('just_LINK');
		}
		//$('#MP3_playlist_page_title').html(data.nowplaying_title);
		
		//console.log((data.currenttime/data.duration)*100);
		switch(data.status.playState) {
			case 0:
				// Stopped, no media
				$('.BUTTON_mp3_playPause_toggle').data('showing','play').find('img:first').attr('src','images/play.png');
				if (!$('.BUTTON_mp3_playPause_toggle').hasClass('buttonDisabled')) {
					$('.BUTTON_mp3_playPause_toggle').addClass('buttonDisabled');
				}
				if (!$('.BUTTON_mp3_fwd').hasClass('buttonDisabled')) {
					$('.BUTTON_mp3_fwd').addClass('buttonDisabled');
				}
				if (!$('.BUTTON_mp3_back').hasClass('buttonDisabled')) {
					$('.BUTTON_mp3_back').addClass('buttonDisabled');
				}
				break;
			case 1:
				// Paused, show play button
				$('.BUTTON_mp3_playPause_toggle').data('showing','pause').find('img:first').attr('src','images/play.png');
				if ($('.BUTTON_mp3_playPause_toggle').hasClass('buttonDisabled')) {
					$('.BUTTON_mp3_playPause_toggle').removeClass('buttonDisabled').addClass('button');
				}
				if ($('.BUTTON_mp3_fwd').hasClass('buttonDisabled')) {
					if (tempTitleBreak !== 'FM') {
						$('.BUTTON_mp3_fwd').removeClass('buttonDisabled');
					} else {
						if (!$('.BUTTON_mp3_fwd').hasClass('buttonDisabled')) {
							$('.BUTTON_mp3_fwd').addClass('buttonDisabled')
						}
					}
				}
				if ($('.BUTTON_mp3_back').hasClass('buttonDisabled')) {
					if (tempTitleBreak !== 'FM') {
						$('.BUTTON_mp3_back').removeClass('buttonDisabled');
					} else {
						if (!$('.BUTTON_mp3_back').hasClass('buttonDisabled')) {
							$('.BUTTON_mp3_back').addClass('buttonDisabled')
						}
					}
				}
				$('.CURRENTLY_PLAYING_TIME').toggleClass('blinking-time');
				break;
			case 2:
				// Playing, show pause button
				$('.BUTTON_mp3_playPause_toggle').data('showing','play').find('img:first').attr('src','images/pause.png');
				if ($('.BUTTON_mp3_playPause_toggle').hasClass('buttonDisabled')) {
					$('.BUTTON_mp3_playPause_toggle').removeClass('buttonDisabled').addClass('button');
				}
				if ($('.BUTTON_mp3_fwd').hasClass('buttonDisabled')) {
					if (tempTitleBreak !== 'FM') {
						$('.BUTTON_mp3_fwd').removeClass('buttonDisabled');
					} else {
						if (!$('.BUTTON_mp3_fwd').hasClass('buttonDisabled')) {
							$('.BUTTON_mp3_fwd').addClass('buttonDisabled')
						}
					}
				}
				if ($('.BUTTON_mp3_back').hasClass('buttonDisabled')) {
					if (tempTitleBreak !== 'FM') {
						$('.BUTTON_mp3_back').removeClass('buttonDisabled');
					} else {
						if (!$('.BUTTON_mp3_back').hasClass('buttonDisabled')) {
							$('.BUTTON_mp3_back').addClass('buttonDisabled')
						}
					}
				}
				$('.CURRENTLY_PLAYING_TIME').removeClass('blinking-time');
				break;
		}
		$('#VOLUME_level_blackout').css('height',250-(data.status.volume*250));
		$('#VOLUME_level_gauge_value').html(Math.round(data.status.volume*100));
		
		//$('.BUTTON_mp3_playPause_toggle').removeClass('buttonDisabled').addClass('button').children(this).attr('src','images/pause.png').data('showing','pause');
	});
	
	socket.on('PLAY_END', function(data) {
		//$('.BUTTON_mp3_playPause_toggle').removeClass('buttonDisabled').addClass('button').children(this).attr('src','images/play.png').data('showing','play');
	});
	
	socket.on('overlay_display', function(data) {
		if (data.type == 'update') {
			updateSessionVars(socket, data);
		}
		if (data.type == 'map_update') {
			updateLocalMapping(socket,data);
		}
		if (data.type == 'connection_update') {
			updateLocalConnectionStatus(data);
		}
	});
	
	socket.emit('mp3_jukebox_enumerate',{});
}

function updateMapAspect(){
	
}

function getMapHW(){
	//$('#MAIN_MAP_IMG').css('width','200%');
	var naturalW = document.querySelector('#MAIN_MAP_IMG').naturalWidth;
	var naturalH = document.querySelector('#MAIN_MAP_IMG').naturalHeight;
	
	$('#OSD_source_width').html(naturalW);
	$('#OSD_source_height').html(naturalH);
	updateMapAspect();
}

function updateLocalConnectionStatus(data) {
	$('#map_socketConnectionStatus').html(data.connectionstatustext);
}

function checkExpChange(socket,data) {
	if(sessionVars.OSD_lastKnown_exp_name != data.MAIN_Experiment) {
		updateOMCexpInfo(socket,data);
		checkSubjChange(socket,data);
	}
}

function checkSubjChange(socket,data) {
	if(sessionVars.OSD_lastKnown_subj_name != data.MAIN_Subject) {
		updateOMCsubjInfo(socket,data);
		checkRunChange(socket,data);
	}
}

function checkRunChange(socket,data) {
	if(sessionVars.OSD_lastKnown_run_name != data.MAIN_Run) {
		updateOMCrunInfo(socket,data);
	}
}

function updateOMCexpInfo(socket, data) {
	sessionVars.OSD_lastKnown_exp_name = data.MAIN_Experiment;
	sessionVars.OSD_experiment = data.MAIN_Experiment;
	updateOSDrunInfo(socket, data);
}

function updateOMCrunInfo(socket, data) {
	sessionVars.OSD_lastKnown_run_name = data.MAIN_Run;
	sessionVars.OSD_run = data.MAIN_Run;
	updateOSDrunInfo(socket, data);
}

function updateOMCsubjInfo(socket, data) {
	sessionVars.OSD_lastKnown_subj_name = data.MAIN_Subject;
	sessionVars.OSD_subject = data.MAIN_Subject;
	updateOSDrunInfo(socket, data);
}

function updateOSDrunInfo(socket, data) {
	$('#OSD_scenario_name').html(sessionVars.OSD_experiment);
	$('#OSD_subject_name').html(sessionVars.OSD_subject);
	$('#OSD_run_name').html(sessionVars.OSD_run);
}

function updateSessionVars(socket, data) {
	checkExpChange(socket,data);
	
	// map image source info
	sessionVars['OSD_source_info']['width'] = $('#OSD_source_width').html();
	sessionVars['OSD_source_info']['height'] = $('#OSD_source_height').html();
	
	// cab position
	sessionVars['VDS_CG_Chassis_Position']['x'] = data.MAIN_VDS_Chassis_Position[1].toFixed(5);
	sessionVars['VDS_CG_Chassis_Position']['y'] = data.MAIN_VDS_Chassis_Position[0].toFixed(5);
	sessionVars['VDS_CG_Chassis_Position']['z'] = data.MAIN_VDS_Chassis_Position[2].toFixed(5);
	// cab orientation
	sessionVars['VDS_CG_Chassis_Orient']['pitch'] = data.MAIN_VDS_Chassis_Orient[0].toFixed(5);
	sessionVars['VDS_CG_Chassis_Orient']['roll'] = data.MAIN_VDS_Chassis_Orient[1].toFixed(5);
	sessionVars['VDS_CG_Chassis_Orient']['yaw'] = data.MAIN_VDS_Chassis_Orient[2].toFixed(5);
	
	// sim frame
	sessionVars['simFrame'] = data.MAIN_simFrameNum;
	
	updateOSDdebugVars(socket,data);			
	updateMapRotation();
	updateCompassRotation();
	updateDotPosition(socket,data);
}

function updateCompassRotation() {
	$('#compass_horizCircle_container').css('transform','transform:rotateX('+(90+100*(sessionVars['VDS_CG_Chassis_Orient']['pitch']))+'deg) rotateY('+sessionVars['VDS_CG_Chassis_Orient']['roll']+'deg)');
	$('#compass_horizCircle').css('transform','rotateZ('+sessionVars['VDS_CG_Chassis_Orient']['yaw']+'deg)');
	//$('#compass_horizCircle .compass_heading_marker').css('transform','rotateX(-90deg) rotateY(-'+sessionVars['VDS_CG_Chassis_Orient']['yaw']+'deg)');
	//$('.compass_heading_greyout').css('transform','rotateY(-'+sessionVars['VDS_CG_Chassis_Orient']['yaw']+'deg)');
}

function updateOSDdebugVars(socket,data) {
	$('#OSD_VDS_Chassis_Position').html(''+
		sessionVars['VDS_CG_Chassis_Position']['x']+'<br />'+
		sessionVars['VDS_CG_Chassis_Position']['y']+'<br />'+
		sessionVars['VDS_CG_Chassis_Position']['z']
	);
	$('#OSD_VDS_Chassis_Orient').html(''+
		sessionVars['VDS_CG_Chassis_Orient']['pitch']+'<br />'+
		sessionVars['VDS_CG_Chassis_Orient']['roll']+'<br />'+
		sessionVars['VDS_CG_Chassis_Orient']['yaw']
	);
	
	$('#OSD_VDS_Chassis_Position_QPNL_X').html(''+
		sessionVars['VDS_CG_Chassis_Position']['x']
	);
	$('#OSD_VDS_Chassis_Position_QPNL_Y').html(''+
		sessionVars['VDS_CG_Chassis_Position']['y']
	);
	$('#OSD_VDS_Chassis_Position_QPNL_Z').html(''+
		sessionVars['VDS_CG_Chassis_Position']['z']
	);
	$('#OSD_simFrame').html(''+sessionVars['simFrame']);
	
	$('#OSD_VDS_Chassis_Orient_yaw').html(''+
		parseFloat(sessionVars['VDS_CG_Chassis_Orient']['yaw']).toFixed(2)
	);
}

function updateLocalMapping(socket, data) {
	console.log(sessionVars);
	sessionVars['MAP_IMG'] = data.MAP_IMG;
	sessionVars['ROUTE_IMG'] = data.ROUTE_IMG;
	sessionVars['LRI_topLeft_X'] = data.MAP_BLI_TL_X;
	sessionVars['LRI_topLeft_Y'] = data.MAP_BLI_TL_Y;
	sessionVars['LRI_bottomRight_X'] = data.MAP_BLI_BR_X;
	sessionVars['LRI_bottomRight_Y'] = data.MAP_BLI_BR_Y;
	
	$('#OSD_scenario_name').html(data.MAIN_Experiment);
	$('#OSD_subject_name').html(data.MAIN_Subject);
	$('#OSD_run_name').html(data.MAIN_Run);
	
	updateOSDmaps();
	updateMapRotation();
}

function updateOSDmaps() {
	$('.mapImg').one('load', function() {
		getMapHW();
		//updateOSDmapRoutes();
	}).attr("src", sessionVars['MAP_IMG']);	
	var mapImgSplit = sessionVars['MAP_IMG'].split('.png');
	$('.mapGPSunderlay').attr('src', mapImgSplit[0]+'_gpsoverlay.png');		
}

function updateOSDmapRoutes() {
	$('.routeImg').one('load', function() {
		//adjustLayout();
	}).attr("src", sessionVars['ROUTE_IMG']);
}

function updateDotPosition(socket,data) {
	measureBLIabsoluteWidth();
}

function measureBLIabsoluteWidth() {
	//if (sessionVars['LRI_topLeft_X'].length == 0) {
	//	socket.emit('display_request', { type: "current_map" });
	//}
	
	var topLeft_X = sessionVars['LRI_topLeft_X'],
		topLeft_Y = sessionVars['LRI_topLeft_Y'],
		bottomRight_X = sessionVars['LRI_bottomRight_X'],
		bottomRight_Y = sessionVars['LRI_bottomRight_Y'];
		
	var totalBLIwidth = 0,
		totalBLIheight = 0,
		BLI_offset_x = 0,
		BLI_offset_y = 0;
	
	totalBLIwidth = diff(topLeft_X,bottomRight_X);
	totalBLIheight = diff(topLeft_Y,bottomRight_Y);
	$('#PixPer_yoff').html(diff(parseFloat(sessionVars['VDS_CG_Chassis_Position']['y']),topLeft_Y).toFixed(3));
	$('#PixPer_xoff').html(diff(parseFloat(sessionVars['VDS_CG_Chassis_Position']['x']),topLeft_X).toFixed(3));
	
	$('#PixPer_width').html(totalBLIwidth);
	$('#PixPer_height').html(totalBLIheight);
	
	$('#PixPer_dimensions_TL_X').html(topLeft_X);
	$('#PixPer_dimensions_TL_Y').html(topLeft_Y);
	$('#PixPer_dimensions_BR_X').html(bottomRight_X);
	$('#PixPer_dimensions_BR_Y').html(bottomRight_Y);
	calculateBLIPercentages();
}

function calculateBLIPercentages() {
	var CG_translated_X = $('#PixPer_xoff').html(),
		CG_translated_Y = $('#PixPer_yoff').html(),
		BLI_translated_width = $('#PixPer_width').html(),
		BLI_translated_height = $('#PixPer_height').html();	
	
	sessionVars['BLI_CG_percent_X'] = (CG_translated_X/BLI_translated_width)*100;
	sessionVars['BLI_CG_percent_Y'] = (CG_translated_Y/BLI_translated_height)*100;
	calculateDotPercentages();
}

function calculateDotPercentages() {
	var map_display_width = $('#OSD_source_width').html();
	var map_display_height = $('#OSD_source_height').html();
	$('#PixPer_xoff_percent').html(sessionVars['BLI_CG_percent_X'].toFixed(2));
	$('#PixPer_yoff_percent').html(sessionVars['BLI_CG_percent_Y'].toFixed(2));
	
	sessionVars['translated_CG_dot_X'] = parseInt((sessionVars['BLI_CG_percent_X']/100)*map_display_width);
	sessionVars['translated_CG_dot_Y'] = parseInt((sessionVars['BLI_CG_percent_Y']/100)*map_display_height);
	//console.log((sessionVars['BLI_CG_percent_Y']/100)*map_display_height);
	updateDPOSD();
}

function updateDPOSD() {
	$('#PixPer_dot_x').html(sessionVars['translated_CG_dot_X']);
	$('#PixPer_dot_y').html(sessionVars['translated_CG_dot_Y']);
	$('#MAIN_MAP_IMG').css('top','-'+(sessionVars['translated_CG_dot_Y'] + dotMarkerOffset_Y) + 'px').css('left','-'+(sessionVars['translated_CG_dot_X'] + dotMarkerOffset_X) + 'px');
	$('#HOME_MAP_IMG').css('top','-'+(sessionVars['translated_CG_dot_Y'] + dotMarkerOffset_Y) + 'px').css('left','-'+(sessionVars['translated_CG_dot_X'] + dotMarkerOffset_X) + 'px');
	$('.mapGPSunderlay').css('top','-'+(sessionVars['translated_CG_dot_Y'] + dotMarkerOffset_Y) + 'px').css('left','-'+(sessionVars['translated_CG_dot_X'] + dotMarkerOffset_X) + 'px');
	//console.log(sessionVars['translated_CG_dot_Y'] + dotMarkerOffset_Y);
}

function updateMapRotation() {
	$('#mapContainerOuter_HomePage').css('-webkit-transform','rotate(-'+sessionVars['VDS_CG_Chassis_Orient']['yaw']+'deg)').css('transform','rotate(-'+sessionVars['VDS_CG_Chassis_Orient']['yaw']+'deg)');
}

function connect(){
	socket = io.connect(serverAddress);
	bindSocketEvents();
}


$(function() { 
	/*
	vid_w_orig = parseInt(jQuery('video').attr('width'));
    vid_h_orig = parseInt(jQuery('video').attr('height'));
    $('#debug').append("<p>DOM loaded</p>");
	*/
    
    $(window).resize(function () { resizeToCover(); });
    $(window).trigger('resize');
	readURLvars();
	
	$('#panelContainer_VOLUME').popup();
	bindDOMEvents();
});



function resizeToCover() {
    // set the video viewport to the window size
    jQuery('#video-viewport').width(jQuery(window).width());
    jQuery('#video-viewport').height(jQuery(window).height());

    // use largest scale factor of horizontal/vertical
    var scale_h = jQuery(window).width() / vid_w_orig;
    var scale_v = jQuery(window).height() / vid_h_orig;
    var scale = scale_h > scale_v ? scale_h : scale_v;

    // don't allow scaled width < minimum video width
    if (scale * vid_w_orig < min_w) {scale = min_w / vid_w_orig;};

    // now scale the video
    $('video').width(scale * vid_w_orig);
    $('video').height(scale * vid_h_orig);
    // and center it by scrolling the video viewport
    $('#video-viewport').scrollLeft((jQuery('video').width() - jQuery(window).width()) / 2);
    $('#video-viewport').scrollTop((jQuery('video').height() - jQuery(window).height()) / 2);
};
